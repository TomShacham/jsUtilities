// Generated by CoffeeScript 1.9.3
(function() {
  var slice = [].slice;

  Array.prototype.each = Array.prototype.forEach;

  Array.prototype.append = function() {
    var arg, j, len;
    for (j = 0, len = arguments.length; j < len; j++) {
      arg = arguments[j];
      this.push(arg);
    }
    return this;
  };

  Array.prototype.cons = function() {
    var arg, args, j, len, ref;
    args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
    ref = args.reverse();
    for (j = 0, len = ref.length; j < len; j++) {
      arg = ref[j];
      this.unshift(arg);
    }
    return this;
  };

  Array.prototype.zip = function(array) {
    return this.map((function(_this) {
      return function(_, i) {
        return [_this, array].map(function(ary) {
          return ary[i];
        });
      };
    })(this));
  };

  Array.prototype.find = function(pred) {
    var el, j, len;
    for (j = 0, len = this.length; j < len; j++) {
      el = this[j];
      if (pred(el)) {
        return el;
      }
    }
  };

  Array.prototype.head = function() {
    return this[0];
  };

  Array.prototype.first = function() {
    return this[0];
  };

  Array.prototype.exists = function(pred) {
    return this.find(pred) !== void 0;
  };

  Function.identity = function(x) {
    return x;
  };

}).call(this);
